<?xml version="1.0" encoding="utf-8" ?>
<!-- This file is and example App.config file to show how to add settings to an 
     item that uses the ConfigurationService -->
<configuration>
  <!-- Place the following comments at the top of your App.Config file -->

  <!--*** This file contains default configuration for <app name>. This file ***
      *** will be overwritten when installing a new version. Changes should  ***
      *** not be made to this file - to change a config section copy the     ***
      *** section to change into <AppName>Settings.xml and make the change   ***
      *** there.                                                             ***-->

  <!--*** configSections section should always match between this file and   ***
      *** <AppName>Settings.xml, copy the latest from here into              ***
      *** <AppName>Settings.xml as the first element.                        ***-->
  <configSections>
    <!-- Structure -->
    <section name="section name"
             type="Fully qualified class name, assembly file name, version, culture, public key token" />
    <!-- Example (note only class and assembly mandatory) -->
    <section name="myCustomSection" 
             type="MyConfig.MyHandler.MyCustomSection, Configuration, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
  </configSections>

  <!-- Then the sections that match the class -->
  <myCustomSection xmlns="MyConfig.MyHandler">
    <element1 name="AnElement"/>
    <elementCollection1>
      <myElement key="Item1"/>
      <myElement key="Item2"/>
    </elementCollection1>
    <element2 name="AnotherElement" aValue="with a named value field"/>
  </myCustomSection>

  <!-- General application settings can use the default appSettings section. -->
  <appSettings file="exampleapp.config">
    <add key="Name" value="String Value" /> 
    <!-- These take the form of name/string value pairs-->
  </appSettings>

  <!-- database Connections can use the default connectionStrings section.-->
  <connectionStrings>
    <!-- Structure (providerName is Optional) -->
    <add
      name="connection string name"
      connectionString="connection string"    
      providerName="ADO.NET data provider"/>
    <!-- Example -->
    <add name="myDBConnection" 
         connectionString="Data Source=localhost;Initial Catalog=myDB;Integrated Security=true" />
  </connectionStrings>

</configuration>