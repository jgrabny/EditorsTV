//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EditorsTeamTV.Sites.Configuration
{
    
    
    /// <summary>
    /// The SitesConfigurationSection Configuration Section.
    /// </summary>
    public partial class SitesConfigurationSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the SitesConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string SitesConfigurationSectionSectionName = "sitesConfigurationSection";
        
        /// <summary>
        /// Gets the SitesConfigurationSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public static global::EditorsTeamTV.Sites.Configuration.SitesConfigurationSection Instance
        {
            get
            {
                return ((global::EditorsTeamTV.Sites.Configuration.SitesConfigurationSection)(global::System.Configuration.ConfigurationManager.GetSection(global::EditorsTeamTV.Sites.Configuration.SitesConfigurationSection.SitesConfigurationSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EditorsTeamTV.Sites.Configuration.SitesConfigurationSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::EditorsTeamTV.Sites.Configuration.SitesConfigurationSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region kanbanize Property
        /// <summary>
        /// The XML name of the <see cref="kanbanize"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string kanbanizePropertyName = "kanbanize";
        
        /// <summary>
        /// Gets or sets the kanbanize.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The kanbanize.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EditorsTeamTV.Sites.Configuration.SitesConfigurationSection.kanbanizePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::EditorsTeamTV.Sites.Configuration.Kanbanize kanbanize
        {
            get
            {
                return ((global::EditorsTeamTV.Sites.Configuration.Kanbanize)(base[global::EditorsTeamTV.Sites.Configuration.SitesConfigurationSection.kanbanizePropertyName]));
            }
            set
            {
                base[global::EditorsTeamTV.Sites.Configuration.SitesConfigurationSection.kanbanizePropertyName] = value;
            }
        }
        #endregion
        
        #region simpleSite Property
        /// <summary>
        /// The XML name of the <see cref="simpleSite"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string simpleSitePropertyName = "simpleSite";
        
        /// <summary>
        /// Gets or sets the simpleSite.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The simpleSite.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EditorsTeamTV.Sites.Configuration.SitesConfigurationSection.simpleSitePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::EditorsTeamTV.Sites.Configuration.SimpleSite simpleSite
        {
            get
            {
                return ((global::EditorsTeamTV.Sites.Configuration.SimpleSite)(base[global::EditorsTeamTV.Sites.Configuration.SitesConfigurationSection.simpleSitePropertyName]));
            }
            set
            {
                base[global::EditorsTeamTV.Sites.Configuration.SitesConfigurationSection.simpleSitePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace EditorsTeamTV.Sites.Configuration
{
    
    
    /// <summary>
    /// The Website Configuration Element.
    /// </summary>
    public partial class Website : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Id Property
        /// <summary>
        /// The XML name of the <see cref="Id"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string IdPropertyName = "id";
        
        /// <summary>
        /// Gets or sets the Id.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Id.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EditorsTeamTV.Sites.Configuration.Website.IdPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string Id
        {
            get
            {
                return ((string)(base[global::EditorsTeamTV.Sites.Configuration.Website.IdPropertyName]));
            }
            set
            {
                base[global::EditorsTeamTV.Sites.Configuration.Website.IdPropertyName] = value;
            }
        }
        #endregion
        
        #region Uri Property
        /// <summary>
        /// The XML name of the <see cref="Uri"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string UriPropertyName = "uri";
        
        /// <summary>
        /// Gets or sets the Uri.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Uri.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EditorsTeamTV.Sites.Configuration.Website.UriPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string Uri
        {
            get
            {
                return ((string)(base[global::EditorsTeamTV.Sites.Configuration.Website.UriPropertyName]));
            }
            set
            {
                base[global::EditorsTeamTV.Sites.Configuration.Website.UriPropertyName] = value;
            }
        }
        #endregion
        
        #region Local Property
        /// <summary>
        /// The XML name of the <see cref="Local"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string LocalPropertyName = "local";
        
        /// <summary>
        /// Gets or sets the Local.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Local.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EditorsTeamTV.Sites.Configuration.Website.LocalPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public bool Local
        {
            get
            {
                return ((bool)(base[global::EditorsTeamTV.Sites.Configuration.Website.LocalPropertyName]));
            }
            set
            {
                base[global::EditorsTeamTV.Sites.Configuration.Website.LocalPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace EditorsTeamTV.Sites.Configuration
{
    
    
    /// <summary>
    /// A collection of Website instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::EditorsTeamTV.Sites.Configuration.Website), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::EditorsTeamTV.Sites.Configuration.Kanbanize.WebsitePropertyName)]
    public partial class Kanbanize : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string WebsitePropertyName = "website";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override string ElementName
        {
            get
            {
                return global::EditorsTeamTV.Sites.Configuration.Kanbanize.WebsitePropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::EditorsTeamTV.Sites.Configuration.Kanbanize.WebsitePropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::EditorsTeamTV.Sites.Configuration.Website)(element)).Id;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::EditorsTeamTV.Sites.Configuration.Website();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::EditorsTeamTV.Sites.Configuration.Website this[int index]
        {
            get
            {
                return ((global::EditorsTeamTV.Sites.Configuration.Website)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> with the specified key.
        /// </summary>
        /// <param name="id">The key of the <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::EditorsTeamTV.Sites.Configuration.Website this[object id]
        {
            get
            {
                return ((global::EditorsTeamTV.Sites.Configuration.Website)(base.BaseGet(id)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="website">The <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Add(global::EditorsTeamTV.Sites.Configuration.Website website)
        {
            base.BaseAdd(website);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="website">The <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Remove(global::EditorsTeamTV.Sites.Configuration.Website website)
        {
            base.BaseRemove(this.GetElementKey(website));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::EditorsTeamTV.Sites.Configuration.Website GetItemAt(int index)
        {
            return ((global::EditorsTeamTV.Sites.Configuration.Website)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> with the specified key.
        /// </summary>
        /// <param name="id">The key of the <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::EditorsTeamTV.Sites.Configuration.Website GetItemByKey(string id)
        {
            return ((global::EditorsTeamTV.Sites.Configuration.Website)(base.BaseGet(((object)(id)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace EditorsTeamTV.Sites.Configuration
{
    
    
    /// <summary>
    /// A collection of Website instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::EditorsTeamTV.Sites.Configuration.Website), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::EditorsTeamTV.Sites.Configuration.SimpleSite.WebsitePropertyName)]
    public partial class SimpleSite : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string WebsitePropertyName = "website";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override string ElementName
        {
            get
            {
                return global::EditorsTeamTV.Sites.Configuration.SimpleSite.WebsitePropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::EditorsTeamTV.Sites.Configuration.SimpleSite.WebsitePropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::EditorsTeamTV.Sites.Configuration.Website)(element)).Id;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::EditorsTeamTV.Sites.Configuration.Website();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::EditorsTeamTV.Sites.Configuration.Website this[int index]
        {
            get
            {
                return ((global::EditorsTeamTV.Sites.Configuration.Website)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> with the specified key.
        /// </summary>
        /// <param name="id">The key of the <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::EditorsTeamTV.Sites.Configuration.Website this[object id]
        {
            get
            {
                return ((global::EditorsTeamTV.Sites.Configuration.Website)(base.BaseGet(id)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="website">The <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Add(global::EditorsTeamTV.Sites.Configuration.Website website)
        {
            base.BaseAdd(website);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="website">The <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Remove(global::EditorsTeamTV.Sites.Configuration.Website website)
        {
            base.BaseRemove(this.GetElementKey(website));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::EditorsTeamTV.Sites.Configuration.Website GetItemAt(int index)
        {
            return ((global::EditorsTeamTV.Sites.Configuration.Website)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> with the specified key.
        /// </summary>
        /// <param name="id">The key of the <see cref="global::EditorsTeamTV.Sites.Configuration.Website"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::EditorsTeamTV.Sites.Configuration.Website GetItemByKey(string id)
        {
            return ((global::EditorsTeamTV.Sites.Configuration.Website)(base.BaseGet(((object)(id)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
